public class QuickSort<T extends Comparable<T>> extends AbstractSorting<T> {

	@Override
	public void sort(T[] array, int leftIndex, int rightIndex) {
		quicksort(array, leftIndex, rightIndex);

	}

	private void quicksort(T[] array, int leftIndex, int rightIndex) {
		if (leftIndex < rightIndex) {
			int j = separar(array, leftIndex, rightIndex);
			quicksort(array, leftIndex, j - 1);
			quicksort(array, j + 1, rightIndex);
		}

	}

	private int separar(T[] array, int leftIndex, int rightIndex) {
		int i = leftIndex + 1;
		int j = rightIndex;
		T pivo = array[leftIndex];
		while (i <= j) {
			if (array[i].compareTo(pivo) <= 0)
				i++;
			else if (array[j].compareTo(pivo) > 0)
				j--;
			else if (i <= j) {
				Util.swap(array, i, j);
				i++;
				j--;
			}

		}
		Util.swap(array, leftIndex, j);
		return j;
	}

}
